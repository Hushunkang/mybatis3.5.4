<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
namespace：命名空间，指定dao层Mapper接口的全类名
id：唯一标识一个查询/更新sql
resultType：查询的结果映射到哪个类
#{id}：从传递过来的参数中取出id值
-->
<mapper namespace="com.atguigu.mybatis.dao.EmployeeMapper">

    <select id="getEmpById" resultType="emp">
        select * from tbl_employee where id = #{id}
    </select>

    <select id="getEmpById" resultType="emp" databaseId="mysql">
        select * from tbl_employee where id = #{id}
    </select>

    <select id="getEmpById" resultType="emp" databaseId="oracle">
        select EMPNO id,ENAME lastName from EMP where EMPNO = #{id}
    </select>

<!--    void addEmp(Employee emp);-->
    <!-- 注意parameterType可以省略，如果要写就写全类名或者别名 -->
    <!--
    获取自增主键的值：
		mysql支持自增主键，自增主键值的获取，mybatis是利用Statement的getGenreatedKeys方法（原生的jdbc也是这样滴）
		useGeneratedKeys="true"表示使用自增主键获取主键值策略
		keyProperty表示指定对应的主键属性，也就是mybatis获取到主键值以后，将这个值封装给javaBean的哪个属性
	-->
    <insert id="addEmp" parameterType="emp" useGeneratedKeys="true" keyProperty="id">
        insert into tbl_employee(last_name,gender,email) values(#{lastName},#{gender},#{email})
    </insert>

    <!--    void deleteEmp(Employee emp);-->
    <delete id="deleteEmp">
        delete from tbl_employee where id=#{id}
    </delete>

    <!--    void updateEmp(Employee emp);-->
    <update id="updateEmp">
        update tbl_employee set last_name=#{lastName},email=#{email}
        where id=#{id}
    </update>

</mapper>