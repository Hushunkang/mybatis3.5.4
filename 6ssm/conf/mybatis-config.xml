<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

    <!--
		2、settings：可以包含很多mybatis重要的设置项
		   setting：用来设置每一个设置项
		   name：设置项名
		   value：设置项值
	-->
    <settings>
        <!-- mybatis中开启驼峰命名规则映射 -->
        <setting name="mapUnderscoreToCamelCase" value="true"/>
        <setting name="jdbcTypeForNull" value="NULL"/>
        <!-- 最好是显示的指定每一个我们需要更改的配置项，即使他是默认滴，也配置一哈，避免版本更新带来问题 -->
        <setting name="lazyLoadingEnabled" value="true"/>
        <setting name="aggressiveLazyLoading" value="false"/>
        <setting name="cacheEnabled" value="true"/><!-- 开启mybatis的二级缓存 -->
    </settings>

    <!--
        5、databaseIdProvider：支持多数据库厂商
		   type="DB_VENDOR"对应VendorDatabaseIdProvider
		   作用就是得到数据库厂商的标识，mybatis就能根据数据库厂商标识来执行不同的sql
		   sql server的标识是这样的SQL Server，mysql的标识是这样的MySQL，oracle的标识是这样的Oracle等
		   说明：数据库厂商标识是不同的jdbc驱动（SQL Server的jdbc驱动、MySQL的jdbc驱动、Oracle的jdbc驱动等）自带的
		        查看jdbc接口/规范文档（其实在javase的api文档中）通过getDatabaseProductName()方法获取是哪一种类型的数据库
	-->
    <databaseIdProvider type="DB_VENDOR">
        <!-- 为不同的数据库厂商起别名 -->
        <property name="SQL Server" value="sql server"/>
        <property name="MySQL" value="mysql"/>
        <property name="Oracle" value="oracle"/>
    </databaseIdProvider>

</configuration>